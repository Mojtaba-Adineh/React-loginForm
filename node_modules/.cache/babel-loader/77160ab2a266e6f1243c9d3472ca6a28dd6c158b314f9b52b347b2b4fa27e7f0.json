{"ast":null,"code":"var _jsxFileName = \"/media/moji/Shared/programming/react/tutorial-codes/authentication-authorization/src/components/form.jsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form } from \"formik\";\nimport React, { Component, useEffect } from \"react\";\nimport CustomInput from \"./custom-input\";\nimport { yupLoginSchema } from \"../schemas/loginForm-schema\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const onSubmit = async (values, actions) => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    actions.resetForm();\n    if (values) navigate(\"/home\");\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: yupLoginSchema,\n    onSubmit: onSubmit,\n    children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"inner-login-card d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n          labelClass: \"fw-bold\",\n          name: \"username\",\n          value: props.values.username,\n          id: \"usename\",\n          type: \"text\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelClass: \"fw-bold\",\n          name: \"password\",\n          value: props.values.password,\n          id: \"password\",\n          type: \"password\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelClass: \"fw-bold\",\n          name: \"confirmPassword\",\n          value: props.values.confirmPassword,\n          id: \"confirmPassword\",\n          type: \"password\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: props.isSubmitting,\n          className: \"btn btn-dark mt-2\",\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["Formik","Form","React","Component","useEffect","CustomInput","yupLoginSchema","useNavigate","ToastContainer","toast","RegisterForm","navigate","onSubmit","values","actions","Promise","resolve","setTimeout","resetForm","username","password","confirmPassword","props","isSubmitting"],"sources":["/media/moji/Shared/programming/react/tutorial-codes/authentication-authorization/src/components/form.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\nimport React, { Component, useEffect } from \"react\";\nimport CustomInput from \"./custom-input\";\nimport { yupLoginSchema } from \"../schemas/loginForm-schema\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer , toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"\n\nconst RegisterForm = () => {\n  const navigate = useNavigate();\n\n  const onSubmit = async (values, actions) => {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    actions.resetForm();\n    if (values) navigate(\"/home\");\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      enableReinitialize\n      validationSchema={yupLoginSchema}\n      onSubmit={onSubmit}\n    >\n      {(props) => (\n        <div className=\"login-card d-flex align-items-center justify-content-center\">\n          <Form className=\"inner-login-card d-flex flex-column\">\n            <CustomInput\n              labelClass=\"fw-bold\"\n              name=\"username\"\n              value={props.values.username}\n              id=\"usename\"\n              type=\"text\"\n              autoComplete=\"off\"\n            />\n\n            <CustomInput\n              labelClass=\"fw-bold\"\n              name=\"password\"\n              value={props.values.password}\n              id=\"password\"\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n\n            <CustomInput\n              labelClass=\"fw-bold\"\n              name=\"confirmPassword\"\n              value={props.values.confirmPassword}\n              id=\"confirmPassword\"\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n\n            <button\n              disabled={props.isSubmitting}\n              className=\"btn btn-dark mt-2\"\n              type=\"submit\"\n            >\n              Log in\n            </button>\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAGC,KAAK,QAAQ,gBAAgB;AACvD,OAAO,uCAAuC;AAAA;AAE9C,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,QAAQ,GAAG,OAAOC,MAAM,EAAEC,OAAO,KAAK;IAC1C,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IACzDF,OAAO,CAACI,SAAS,EAAE;IACnB,IAAIL,MAAM,EAAEF,QAAQ,CAAC,OAAO,CAAC;EAC/B,CAAC;EAED,oBACE,QAAC,MAAM;IACL,aAAa,EAAE;MACbQ,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAE;IACF,kBAAkB;IAClB,gBAAgB,EAAEf,cAAe;IACjC,QAAQ,EAAEM,QAAS;IAAA,UAEjBU,KAAK,iBACL;MAAK,SAAS,EAAC,6DAA6D;MAAA,uBAC1E,QAAC,IAAI;QAAC,SAAS,EAAC,qCAAqC;QAAA,wBACnD,QAAC,WAAW;UACV,UAAU,EAAC,SAAS;UACpB,IAAI,EAAC,UAAU;UACf,KAAK,EAAEA,KAAK,CAACT,MAAM,CAACM,QAAS;UAC7B,EAAE,EAAC,SAAS;UACZ,IAAI,EAAC,MAAM;UACX,YAAY,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAClB,eAEF,QAAC,WAAW;UACV,UAAU,EAAC,SAAS;UACpB,IAAI,EAAC,UAAU;UACf,KAAK,EAAEG,KAAK,CAACT,MAAM,CAACO,QAAS;UAC7B,EAAE,EAAC,UAAU;UACb,IAAI,EAAC,UAAU;UACf,YAAY,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAClB,eAEF,QAAC,WAAW;UACV,UAAU,EAAC,SAAS;UACpB,IAAI,EAAC,iBAAiB;UACtB,KAAK,EAAEE,KAAK,CAACT,MAAM,CAACQ,eAAgB;UACpC,EAAE,EAAC,iBAAiB;UACpB,IAAI,EAAC,UAAU;UACf,YAAY,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAClB,eAEF;UACE,QAAQ,EAAEC,KAAK,CAACC,YAAa;UAC7B,SAAS,EAAC,mBAAmB;UAC7B,IAAI,EAAC,QAAQ;UAAA,UACd;QAED;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EAEV;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,GA9DIb,YAAY;EAAA,QACCH,WAAW;AAAA;AAAA,KADxBG,YAAY;AAgElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
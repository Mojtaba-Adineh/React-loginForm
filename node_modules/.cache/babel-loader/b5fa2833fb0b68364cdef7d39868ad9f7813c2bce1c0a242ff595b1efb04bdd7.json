{"ast":null,"code":"var _jsxFileName = \"/media/moji/Shared/programming/react/tutorial-codes/authentication-authorization/src/components/form.jsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form } from \"formik\";\nimport React, { Component, useEffect } from \"react\";\nimport CustomInput from \"./custom-input\";\nimport { yupLoginSchema } from \"../schemas/loginForm-schema\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"mojtaba\"\n  });\n  useEffect(() => {});\n  const onSubmit = async (values, actions) => {\n    actions.resetForm();\n    if (values) {\n      toast.success(\"Registered!\");\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      navigate(\"/home\");\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      enableReinitialize: true,\n      validationSchema: yupLoginSchema,\n      onSubmit: onSubmit,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"inner-login-card d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            labelClass: \"fw-bold\",\n            name: \"username\",\n            value: props.values.username,\n            id: \"usename\",\n            type: \"text\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            labelClass: \"fw-bold\",\n            name: \"password\",\n            value: props.values.password,\n            id: \"password\",\n            type: \"password\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            labelClass: \"fw-bold\",\n            name: \"confirmPassword\",\n            value: props.values.confirmPassword,\n            id: \"confirmPassword\",\n            type: \"password\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: props.isSubmitting,\n            className: \"btn btn-dark mt-2\",\n            type: \"submit\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"T3Qv7t7xeKZ6AXmLQLYcbLC1SKg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["Formik","Form","React","Component","useEffect","CustomInput","yupLoginSchema","useNavigate","ToastContainer","toast","RegisterForm","navigate","user","setUser","useState","name","onSubmit","values","actions","resetForm","success","Promise","resolve","setTimeout","username","password","confirmPassword","props","isSubmitting"],"sources":["/media/moji/Shared/programming/react/tutorial-codes/authentication-authorization/src/components/form.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\nimport React, { Component, useEffect } from \"react\";\nimport CustomInput from \"./custom-input\";\nimport { yupLoginSchema } from \"../schemas/loginForm-schema\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer , toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst RegisterForm = () => {\n  const navigate = useNavigate();\n  const [user , setUser] = useState({name : \"mojtaba\"});\n\n  useEffect (() => {\n    \n  })\n\n  const onSubmit = async (values, actions) => {\n    actions.resetForm();\n    if (values) {\n      toast.success(\"Registered!\");\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      navigate(\"/home\")\n    };\n  };\n\n  return (\n    <React.Fragment>\n      <ToastContainer/>\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        enableReinitialize\n        validationSchema={yupLoginSchema}\n        onSubmit={onSubmit}\n      >\n        {(props) => (\n          <div className=\"login-card d-flex align-items-center justify-content-center\">\n            <Form className=\"inner-login-card d-flex flex-column\">\n              <CustomInput\n                labelClass=\"fw-bold\"\n                name=\"username\"\n                value={props.values.username}\n                id=\"usename\"\n                type=\"text\"\n                autoComplete=\"off\"\n              />\n              <CustomInput\n                labelClass=\"fw-bold\"\n                name=\"password\"\n                value={props.values.password}\n                id=\"password\"\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n              <CustomInput\n                labelClass=\"fw-bold\"\n                name=\"confirmPassword\"\n                value={props.values.confirmPassword}\n                id=\"confirmPassword\"\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n              <button\n                disabled={props.isSubmitting}\n                className=\"btn btn-dark mt-2\"\n                type=\"submit\"\n              >\n                Log in\n              </button>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAGC,KAAK,QAAQ,gBAAgB;AACvD,OAAO,uCAAuC;AAAC;AAE/C,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM,CAACK,IAAI,EAAGC,OAAO,CAAC,GAAGC,QAAQ,CAAC;IAACC,IAAI,EAAG;EAAS,CAAC,CAAC;EAErDX,SAAS,CAAE,MAAM,CAEjB,CAAC,CAAC;EAEF,MAAMY,QAAQ,GAAG,OAAOC,MAAM,EAAEC,OAAO,KAAK;IAC1CA,OAAO,CAACC,SAAS,EAAE;IACnB,IAAIF,MAAM,EAAE;MACVR,KAAK,CAACW,OAAO,CAAC,aAAa,CAAC;MAC5B,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACzDX,QAAQ,CAAC,OAAO,CAAC;IACnB;IAAC;EACH,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACjB,QAAC,MAAM;MACL,aAAa,EAAE;QACba,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACnB,CAAE;MACF,kBAAkB;MAClB,gBAAgB,EAAEpB,cAAe;MACjC,QAAQ,EAAEU,QAAS;MAAA,UAEjBW,KAAK,iBACL;QAAK,SAAS,EAAC,6DAA6D;QAAA,uBAC1E,QAAC,IAAI;UAAC,SAAS,EAAC,qCAAqC;UAAA,wBACnD,QAAC,WAAW;YACV,UAAU,EAAC,SAAS;YACpB,IAAI,EAAC,UAAU;YACf,KAAK,EAAEA,KAAK,CAACV,MAAM,CAACO,QAAS;YAC7B,EAAE,EAAC,SAAS;YACZ,IAAI,EAAC,MAAM;YACX,YAAY,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAClB,eACF,QAAC,WAAW;YACV,UAAU,EAAC,SAAS;YACpB,IAAI,EAAC,UAAU;YACf,KAAK,EAAEG,KAAK,CAACV,MAAM,CAACQ,QAAS;YAC7B,EAAE,EAAC,UAAU;YACb,IAAI,EAAC,UAAU;YACf,YAAY,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAClB,eACF,QAAC,WAAW;YACV,UAAU,EAAC,SAAS;YACpB,IAAI,EAAC,iBAAiB;YACtB,KAAK,EAAEE,KAAK,CAACV,MAAM,CAACS,eAAgB;YACpC,EAAE,EAAC,iBAAiB;YACpB,IAAI,EAAC,UAAU;YACf,YAAY,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAClB,eACF;YACE,QAAQ,EAAEC,KAAK,CAACC,YAAa;YAC7B,SAAS,EAAC,mBAAmB;YAC7B,IAAI,EAAC,QAAQ;YAAA,UACd;UAED;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IAEV;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAErB,CAAC;AAAC,GAtEIlB,YAAY;EAAA,QACCH,WAAW;AAAA;AAAA,KADxBG,YAAY;AAwElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
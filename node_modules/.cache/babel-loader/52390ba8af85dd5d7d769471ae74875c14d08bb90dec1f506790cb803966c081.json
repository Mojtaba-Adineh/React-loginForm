{"ast":null,"code":"var _jsxFileName = \"/media/moji/Shared/programming/react/tutorial-codes/counter-app/src/components/counters.jsx\";\nimport { getAllByDisplayValue } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\";\nimport Counter from \"./counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counters extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps);\n    console.log(prevState);\n    if (prevProps.counter.value !== this.props.counters.value) {\n      console.log(\"value changed!\");\n    }\n  }\n  render() {\n    console.log(\"Counters rendered!\");\n    const {\n      onReset,\n      counters,\n      onDelete,\n      onIncrement\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        className: \"btn btn-sm btn-info m-1\",\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onDelete: () => onDelete(counter),\n        onIncrement: onIncrement,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Counters;","map":{"version":3,"names":["getAllByDisplayValue","React","Component","findRenderedDOMComponentWithClass","Counter","Counters","componentDidUpdate","prevProps","prevState","console","log","counter","value","props","counters","render","onReset","onDelete","onIncrement","map","id"],"sources":["/media/moji/Shared/programming/react/tutorial-codes/counter-app/src/components/counters.jsx"],"sourcesContent":["import { getAllByDisplayValue } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n\n  componentDidUpdate(prevProps , prevState) {\n    console.log(prevProps);\n    console.log(prevState);\n    if (prevProps.counter.value !== this.props.counters.value) {\n      console.log(\"value changed!\");\n    }\n  }\n\n  render() {\n\n    console.log(\"Counters rendered!\");\n\n    const {onReset , counters , onDelete , onIncrement} = this.props;\n\n    return (\n      <div>\n        <button\n          onClick={onReset}\n          className=\"btn btn-sm btn-info m-1\"\n        >\n          Reset All\n        </button>\n        {counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={() => onDelete(counter)}\n            onIncrement={onIncrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAC7D,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,iCAAiC,QAAQ,sBAAsB;AACxE,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAE/BI,kBAAkB,CAACC,SAAS,EAAGC,SAAS,EAAE;IACxCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACtBE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,IAAID,SAAS,CAACI,OAAO,CAACC,KAAK,KAAK,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,KAAK,EAAE;MACzDH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF;EAEAK,MAAM,GAAG;IAEPN,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IAEjC,MAAM;MAACM,OAAO;MAAGF,QAAQ;MAAGG,QAAQ;MAAGC;IAAW,CAAC,GAAG,IAAI,CAACL,KAAK;IAEhE,oBACE;MAAA,wBACE;QACE,OAAO,EAAEG,OAAQ;QACjB,SAAS,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG5B,EACRF,QAAQ,CAACK,GAAG,CAACR,OAAO,iBACnB,QAAC,OAAO;QAEN,QAAQ,EAAE,MAAMM,QAAQ,CAACN,OAAO,CAAE;QAClC,WAAW,EAAEO,WAAY;QACzB,OAAO,EAAEP;MAAQ,GAHZA,OAAO,CAACS,EAAE;QAAA;QAAA;QAAA;MAAA,QAKlB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;AAEA,eAAef,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}